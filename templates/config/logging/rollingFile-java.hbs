package {{defaultPackageName}}.config;

import org.apache.log4j.rolling.RollingFileAppender;
import org.apache.log4j.rolling.FixedWindowRollingPolicy;
import org.apache.log4j.rolling.SizeBasedTriggeringPolicy;
import org.apache.log4j.PatternLayout;
import org.apache.log4j.Logger;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class {{txtFileName}} {

  @Bean(name = "{{txtAppenderName}}")
  public RollingFileAppender {{txtAppenderName}}() {
    RollingFileAppender rollingFileAppender = new RollingFileAppender();

    // Configure rolling policy
    FixedWindowRollingPolicy rollingPolicy = new FixedWindowRollingPolicy();
    rollingPolicy.setFileNamePattern("{{txtLogFileNamePattern}}");
    rollingPolicy.setMaxIndex({{txtMaxIndex}});
    rollingFileAppender.setRollingPolicy(rollingPolicy);

    // Configure triggering policy
    SizeBasedTriggeringPolicy triggeringPolicy = new SizeBasedTriggeringPolicy();
    triggeringPolicy.setMaxFileSize("{{txtMaxFileSize}}");
    rollingFileAppender.setTriggeringPolicy(triggeringPolicy);

    // Set layout
    PatternLayout layout = new PatternLayout();
    layout.setConversionPattern("{{txtConversionPattern}}");
    rollingFileAppender.setLayout(layout);

    return rollingFileAppender;
  }

  @Bean
  public Logger springLogger() {
    Logger logger = Logger.getLogger("org.springframework");
    logger.setAdditivity(false);
    logger.setLevel(org.apache.log4j.Level.DEBUG);
    logger.addAppender({{txtAppenderName}}());
    return logger;
  }

  @Bean
  public Logger rootLogger() {
    Logger rootLogger = Logger.getRootLogger();
    rootLogger.setLevel(org.apache.log4j.Level.OFF);
    rootLogger.addAppender({{txtAppenderName}}());
    return rootLogger;
  }
}
